# Generated by Django 3.2.12 on 2022-03-28 02:29

from django.conf import settings
import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CashBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=100000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('object_updated_at', models.DateTimeField(default='2017-01-01')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_balance', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], max_length=10)),
                ('amount', models.FloatField(null=True)),
                ('created_at', models.DateTimeField()),
                ('quantity', models.IntegerField()),
                ('cash_balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction', to='stock_simulator.cashbalance')),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction', to='stock_simulator.stock')),
            ],
        ),
        migrations.CreateModel(
            name='StockPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('open', models.FloatField()),
                ('close', models.FloatField()),
                ('low', models.FloatField()),
                ('high', models.FloatField()),
                ('volume', models.IntegerField()),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price', to='stock_simulator.stock')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', django.contrib.postgres.fields.ranges.DateRangeField(db_index=True, null=True)),
                ('quantity', models.IntegerField(default=0)),
                ('cash_balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='stock_simulator.cashbalance')),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position', to='stock_simulator.stock')),
            ],
        ),
        migrations.CreateModel(
            name='CashTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', django.contrib.postgres.fields.ranges.DateRangeField(db_index=True, null=True)),
                ('amount', models.FloatField(default=0)),
                ('cash_balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cashbalance', to='stock_simulator.cashbalance')),
            ],
        ),
        migrations.AddConstraint(
            model_name='stockprice',
            constraint=models.UniqueConstraint(fields=('date', 'ticker'), name='unique-date-ticker'),
        ),
        migrations.AddConstraint(
            model_name='position',
            constraint=models.UniqueConstraint(fields=('date', 'ticker', 'cash_balance'), name='unique-date-ticker-portfolio'),
        ),
        migrations.AddConstraint(
            model_name='cashtransaction',
            constraint=models.UniqueConstraint(fields=('date', 'cash_balance'), name='unique-date-portfolio'),
        ),
    ]
